# Generated by Django 2.2.6 on 2021-01-12 17:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('championId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('FlatMovementSpeedMod', models.IntegerField(blank=True, null=True)),
                ('FlatHPPoolMod', models.IntegerField(blank=True, null=True)),
                ('FlatCritChanceMod', models.IntegerField(blank=True, null=True)),
                ('FlatMagicDamageMod', models.IntegerField(blank=True, null=True)),
                ('FlatMPPoolMod', models.IntegerField(blank=True, null=True)),
                ('FlatArmorMod', models.IntegerField(blank=True, null=True)),
                ('FlatSpellBlockMod', models.IntegerField(blank=True, null=True)),
                ('FlatPhysicalDamageMod', models.IntegerField(blank=True, null=True)),
                ('PercentAttackSpeedMod', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('PercentLifeStealMod', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('FlatHPRegenMod', models.IntegerField(blank=True, null=True)),
                ('PercentMovementSpeedMod', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('FlatMPRegenMod', models.IntegerField(blank=True, null=True)),
                ('gearId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('gameId', models.IntegerField(primary_key=True, serialize=False)),
                ('platformId', models.CharField(blank=True, max_length=15, null=True)),
                ('seasonId', models.IntegerField(blank=True, null=True)),
                ('queueId', models.IntegerField(blank=True, null=True)),
                ('gameCreation', models.DateField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('gameHash', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('summonerId', models.CharField(blank=True, max_length=30, null=True)),
                ('accountId', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('slug', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participantId', models.IntegerField(blank=True, null=True)),
                ('kills', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('deaths', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(blank=True, choices=[('TOP', 'TOP'), ('JUNGLE', 'JUNGLE'), ('MIDDLE', 'MIDDLE'), ('AD_CARRY', 'AD_CARRY'), ('SUPPORT', 'SUPPORT')], max_length=30, null=True)),
                ('champion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LOL.Champion')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LOL.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Timestamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Side',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField(default=False)),
                ('side', models.CharField(choices=[('R', 'Red'), ('B', 'Blue')], max_length=10)),
                ('teamId', models.PositiveIntegerField(blank=True, null=True)),
                ('bans', models.ManyToManyField(related_name='bans', to='LOL.Champion')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LOL.Match')),
                ('players', models.ManyToManyField(related_name='played', through='LOL.PlayerStats', to='LOL.Player')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LOL.Team')),
            ],
            options={
                'unique_together': {('match', 'side')},
            },
        ),
        migrations.AddField(
            model_name='playerstats',
            name='side',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LOL.Side'),
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(through='LOL.Side', to='LOL.Team'),
        ),
        migrations.CreateModel(
            name='TimestampStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.PositiveIntegerField(blank=True, null=True)),
                ('currentGold', models.IntegerField(blank=True, null=True)),
                ('totalGold', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('xp', models.IntegerField(blank=True, null=True)),
                ('minionsKilled', models.IntegerField(blank=True, null=True)),
                ('jungleMinionsKilled', models.IntegerField(blank=True, null=True)),
                ('dominionScore', models.IntegerField(blank=True, null=True)),
                ('playerstat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LOL.PlayerStats')),
            ],
            options={
                'unique_together': {('playerstat', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventType', models.CharField(choices=[('BUILDING_KILL', 'BUILDING_KILL'), ('CHAMPION_KILL', 'CHAMPION_KILL'), ('ELITE_MONSTER_KILL', 'ELITE_MONSTER_KILL'), ('ITEM_DESTROYED', 'ITEM_DESTROYED'), ('ITEM_PURCHASED', 'ITEM_PURCHASED'), ('ITEM_SOLD', 'ITEM_SOLD'), ('ITEM_UNDO', 'ITEM_UNDO'), ('SKILL_LEVEL_UP', 'SKILL_LEVEL_UP'), ('WARD_KILL', 'WARD_KILL'), ('WARD_PLACED', 'WARD_PLACED')], max_length=30)),
                ('timestamp', models.PositiveIntegerField(blank=True, null=True)),
                ('levelUpType', models.CharField(blank=True, choices=[('NORMAL', 'NORMAL'), ('EVOLVE', 'EVOLVE')], max_length=30, null=True)),
                ('skillSlot', models.PositiveIntegerField(blank=True, null=True)),
                ('wardType', models.CharField(blank=True, choices=[('YELLOW_TRINKET', 'YELLOW_TRINKET'), ('BLUE_TRINKET', 'BLUE_TRINKET'), ('CONTROL_WARD', 'CONTROL_WARD'), ('SIGHT_WARD', 'SIGHT_WARD'), ('UNDEFINED', 'UNDEFINED')], max_length=30, null=True)),
                ('buildingType', models.CharField(blank=True, choices=[('TOWER_BUILDING', 'TOWER_BUILDING'), ('INHIBITOR_BUILDING', 'INHIBITOR_BUILDING')], max_length=30, null=True)),
                ('laneType', models.CharField(blank=True, choices=[('MID_LANE', 'MID_LANE'), ('BOT_LANE', 'BOT_LANE'), ('TOP_LANE', 'TOP_LANE')], max_length=30, null=True)),
                ('towerType', models.CharField(blank=True, choices=[('NEXUS_TURRET', 'NEXUS_TURRET'), ('INNER_TURRET', 'INNER_TURRET'), ('OUTER_TURRET', 'OUTER_TURRET'), ('BASE_TURRET', 'BASE_TURRET'), ('UNDEFINED_TURRET', 'UNDEFINED_TURRET')], max_length=30, null=True)),
                ('monsterSubType', models.CharField(blank=True, choices=[('FIRE_DRAGON', 'FIRE_DRAGON'), ('WATER_DRAGON', 'WATER_DRAGON')], max_length=30, null=True)),
                ('monsterType', models.CharField(blank=True, choices=[('BARON_NASHOR', 'BARON_NASHOR'), ('RIFTHERALD', 'RIFTHERALD'), ('DRAGON', 'DRAGON')], max_length=30, null=True)),
                ('assistingParticipants', models.ManyToManyField(related_name='assistEvents', to='LOL.PlayerStats')),
                ('gear', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LOL.Gear')),
                ('playerstat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LOL.PlayerStats')),
                ('side', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LOL.Side')),
                ('victim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deathEvents', to='LOL.PlayerStats')),
            ],
            options={
                'unique_together': {('playerstat', 'timestamp', 'eventType')},
            },
        ),
    ]
